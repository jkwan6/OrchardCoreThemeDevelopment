@{
    int level = (int)Model.Level;
    TagBuilder tag = Tag(Model);
    TagBuilder parentTag = null;
    
    if ((bool)Model.HasItems)
    {
        tag.AddCssClass("dropdown");
        tag.Attributes.Add("data-mdb-dropdown-init",null);
        tag.Attributes.Add("data-mdb-dropdown-animation","off");
        parentTag = Tag(Model);
        parentTag.AddCssClass("dropdown-menu");
    }

    // Morphing the shape to keep Model untouched
    Model.Metadata.Alternates.Clear();
    Model.Classes.Clear();
    Model.Metadata.Type = "MenuItemLink";
    
    @if ((int)Model.Level > 0)
    {

    }
    else
    {
        Model.Classes.Add("nav-link");
        if (Model.HasItems)
        {
            Model.Classes.Add("dropdown-item");
        }
    }
    if (Model.HasItems)
    {
        // Model.Attributes.Add("data-mdb-dropdown-init",null);
        // tag.Attributes.Add("data-mdb-dropdown-animation","off");
        Model.Classes.Add("dropdown-toggle");
        Model.Attributes.Add("data-bs-toggle", "dropdown");
        Model.Attributes.Add("aria-expanded", "false");
        tag.InnerHtml.AppendHtml(await DisplayAsync(Model));
    }
    else
    {
        Model.Classes.Add("dropdown-item");
        <li>
        @tag.InnerHtml.AppendHtml(await DisplayAsync(Model))
        </li>
    }

    if (parentTag != null)
    {
        foreach (var item in Model.Items)
        {
            item.Level = level + 1;
            item.ParentTag = parentTag;
            parentTag.InnerHtml.AppendHtml(await DisplayAsync(item));
            
        }

        tag.InnerHtml.AppendHtml(parentTag);
    }
}

@tag